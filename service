#!/usr/bin/env node

import process from 'node:process';
import fs from 'node:fs/promises';

const commandsPath = new URL('./commands', import.meta.url).pathname;

const [,, command, actionName, ...args_] = process.argv;

/**
 * Auto connect command and actionName to the script
 */
const dirrents = await fs.readdir(commandsPath, {withFileTypes: true});
const actionPathes = dirrents.filter(dirent => dirent.isDirectory()).map(dirent => dirent.name);
const commadAndActionNames = actionPathes.map(actionPath => actionPath.split('-'));
for (const [cmd, act] of commadAndActionNames) {
	if (cmd === command && act === actionName) {
		const {main} = await import(`${commandsPath}/${cmd}-${act}/index.js`);
		await main(...args_);
		process.exit(0);
	}
}

/**
 * CLI Information
 */
console.info(`
AWS Microservice Framework

Usage:
	node service make action {actionName}	Create a new action
	node service make env			Create SAM build environment file
	node service build sdk			Build the SDK
	node service build docs			Build the docs
`);
process.exit(0);
